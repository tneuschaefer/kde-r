% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rejection_sampling.R
\name{rejection_sampling_factory}
\alias{rejection_sampling_factory}
\title{Rejection Sampling Factory}
\source{
https://en.wikipedia.org/wiki/Rejection_sampling
}
\usage{
rejection_sampling_factory(
  sample_density,
  proposal_dist,
  proposal_density,
  m,
  interval
)
}
\arguments{
\item{sample_density}{the probability density function to construct the sample}

\item{proposal_dist}{the distribution function used to create samples from
\code{density}}

\item{proposal_density}{the probability density function used to accept or discard samples}

\item{m}{numeric scalar bigger one satisfying \code{sample_density(x) <= m*density(x)}}

\item{interval}{numeric interval used to calculate m if no m is given}
}
\value{
A function taking a single numeric number \code{n} returning \code{n}
\code{sample_density}-distributed random numbers
}
\description{
\code{rejection_sampling_factory} creates a function that can draw samples
from a given probabilty density function
}
\details{
Rejection sampling uses \code{distribution} to draw samples and
accepts/rejects these samples according to the densities \code{sample_density}
and \code{density}, such that the resulting samples are \code{sample_density}-distributed.

Many rejected samples result in longer runtimes. To prevent this \code{m} should be
chosen as small as possible, satisfying \code{sample_density(x) <=
  m*density(x)} for all \code{x}.

If no m is given \code{rejection_sampling_factory}
searches for a maximum of \code{sample_density/proposal_density} inside \code{interval}
}
\examples{
custom_den <- function(x) {
  res <- (3 / 2) * (x^3) + (11 / 8) * (x^2) + (1 / 6) * (x) + (1 / 12)
  res[x < 0 | x > 1] <- 0
  res
}

custom_sample <- rejection_sampling_factory(custom_den, stats::runif, stats::dunif, 3.2)
x <- seq(-0.5, 1.5, by = 0.01)
y <- custom_den(x)
sample <- custom_sample(100)

plot(x, y,
  type = "l", main = "cutom_density: (3/2)*(x^3)+(11/8)*(x^2)+(1/6)*(x)+(1/12)",
  y_lab = "density"
)
points(sample, rep(0, 100), col = "red", pch = "o")
legend("topleft",
  legend = c("custom_density", "sample"), col = c("black", "red"),
  pch = c("|", "o")
)

}
